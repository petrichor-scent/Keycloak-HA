version: '3'

volumes:
  postgres_data:
    driver: local

services:
  postgres:
    hostname: postgres
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    restart: always

  keycloak-1:
    hostname: keycloak-1
    # image: yellow09/keycloak/keycloak:${KC_VERSION}-tcp-mping
    image: quay.io/keycloak/keycloak:19.0.3
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://${KC_DB_HOST}:${KC_DB_PORT}/${KC_DB_DATABASE}
      KC_DB_HOST: ${KC_DB_HOST}
      KC_DB_DATABASE: ${KC_DB_DATABASE}
      KC_DB_USERNAME: ${KC_DB_USERNAME}
      KC_DB_PASSWORD: ${KC_DB_PASSWORD}
      KC_LOG_LEVEL: INFO,org.infinispan:DEBUG,org.jgroups:DEBUG
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
    command:
      - start
      - --cache=ispn
      - --cache-stack=udp
      - --http-port=8080
      - --proxy=edge
      - --hostname-strict-https=true
      - --hostname=keycloak.polariz.space
    depends_on:
      - 'postgres'

  keycloak-2:
    hostname: keycloak-2
    # image: yellow09/keycloak/keycloak:${KC_VERSION}-tcp-mping
    image: quay.io/keycloak/keycloak:19.0.3
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://${KC_DB_HOST}:${KC_DB_PORT}/${KC_DB_DATABASE}
      KC_DB_HOST: ${KC_DB_HOST}
      KC_DB_DATABASE: ${KC_DB_DATABASE}
      KC_DB_USERNAME: ${KC_DB_USERNAME}
      KC_DB_PASSWORD: ${KC_DB_PASSWORD}
      KC_LOG_LEVEL: INFO,org.infinispan:DEBUG,org.jgroups:DEBUG
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
    command:
      - start
      - --cache=ispn
      - --cache-stack=udp
      - --http-port=8080
      - --proxy=edge
      - --hostname-strict-https=true
      - --hostname=keycloak.polariz.space
    depends_on:
      - 'postgres'

  nginx:
    # container_name: nginx
    image: nginx:latest
    ports:
      - '80:80'
      - '443:443'
    restart: always
    volumes:
      - ./nginx/conf/server-ssl-lb.conf:/etc/nginx/conf.d/server.conf:ro
      - ./nginx/certs/:/etc/nginx/certs/:ro
    depends_on:
      - 'keycloak-1'
      - 'keycloak-2'